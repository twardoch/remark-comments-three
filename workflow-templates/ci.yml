# this_file: .github/workflows/ci.yml

name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for version calculations

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Update version from git
      run: |
        node scripts/version.js update
        echo "Updated version to: $(node scripts/version.js current)"

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run pretest

    - name: Run tests
      run: npm test

    - name: Run coverage
      run: npm run coverage

    - name: Upload coverage to Coveralls
      if: matrix.node-version == '20.x'
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build project
      run: npm run build

    - name: Test build artifacts
      run: |
        if [ ! -f "dist/index.js" ]; then
          echo "❌ Build artifact dist/index.js not found"
          exit 1
        fi
        echo "✅ Build artifacts verified"

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run pretest

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for known vulnerabilities
      run: npx audit-ci --moderate
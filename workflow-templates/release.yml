# this_file: .github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      is-prerelease: ${{ steps.version.outputs.is-prerelease }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Get version info
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        VERSION=${TAG#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        if [[ $TAG =~ -alpha|-beta|-rc ]]; then
          echo "is-prerelease=true" >> $GITHUB_OUTPUT
        else
          echo "is-prerelease=false" >> $GITHUB_OUTPUT
        fi
        
        echo "Tag: $TAG"
        echo "Version: $VERSION"

    - name: Update version from git
      run: |
        node scripts/version.js update
        echo "Updated version to: $(node scripts/version.js current)"

    - name: Install dependencies
      run: npm ci

    - name: Run full test suite
      run: |
        npm run pretest
        npm test
        npm run coverage

    - name: Build project
      run: npm run build

    - name: Verify build artifacts
      run: |
        if [ ! -f "dist/index.js" ]; then
          echo "❌ Build artifact dist/index.js not found"
          exit 1
        fi
        echo "✅ Build artifacts verified"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          package.json
          README.md
          LICENSE
          CHANGELOG.md

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .

    - name: Create Release Notes
      id: release-notes
      run: |
        VERSION="${{ needs.build-and-test.outputs.version }}"
        
        # Extract release notes from CHANGELOG.md
        if [ -f "CHANGELOG.md" ]; then
          RELEASE_NOTES=$(awk "/^## \[${VERSION}\]/ {flag=1; next} /^## \[/ && flag {flag=0} flag" CHANGELOG.md)
        fi
        
        if [ -z "$RELEASE_NOTES" ]; then
          RELEASE_NOTES="Release $VERSION"
        fi
        
        # Write to a file to preserve formatting
        echo "$RELEASE_NOTES" > release-notes.txt
        
        echo "Release notes:"
        cat release-notes.txt

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ needs.build-and-test.outputs.version }}
        body_path: release-notes.txt
        prerelease: ${{ needs.build-and-test.outputs.is-prerelease == 'true' }}
        files: |
          dist/*
          package.json
          README.md
          LICENSE
          CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: [build-and-test, release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://registry.npmjs.org'

    - name: Publish to npm
      run: |
        if [[ "${{ needs.build-and-test.outputs.is-prerelease }}" == "true" ]]; then
          npm publish --tag beta
        else
          npm publish
        fi
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-gpr:
    needs: [build-and-test, release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://npm.pkg.github.com'

    - name: Configure package for GitHub Package Registry
      run: |
        # Create .npmrc for GitHub Package Registry
        echo "@${GITHUB_REPOSITORY_OWNER}:registry=https://npm.pkg.github.com" > .npmrc
        
        # Update package.json name for GPR
        node -e "
          const pkg = require('./package.json');
          pkg.name = '@${GITHUB_REPOSITORY_OWNER}/' + pkg.name;
          require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
        "

    - name: Publish to GitHub Package Registry
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}